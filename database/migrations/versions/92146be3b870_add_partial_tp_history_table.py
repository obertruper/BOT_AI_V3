"""add_partial_tp_history_table

Revision ID: 92146be3b870
Revises: 61d9818f6af1
Create Date: 2025-08-08 17:35:47.203110

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "92146be3b870"
down_revision = "61d9818f6af1"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create partial_tp_history table for tracking partial take profit executions
    op.create_table(
        "partial_tp_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("trade_id", sa.Integer(), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("percent", sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column("close_ratio", sa.DECIMAL(precision=10, scale=4), nullable=False),
        sa.Column("close_qty", sa.DECIMAL(precision=20, scale=8), nullable=False),
        sa.Column("price", sa.DECIMAL(precision=20, scale=8), nullable=False),
        sa.Column("order_id", sa.VARCHAR(length=255), nullable=True),
        sa.Column("status", sa.VARCHAR(length=50), server_default="pending", nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_partial_tp_history_trade_id"),
        "partial_tp_history",
        ["trade_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_partial_tp_history_status"),
        "partial_tp_history",
        ["status"],
        unique=False,
    )

    # Original auto-generated commands
    op.alter_column("signals", "strategy_name", existing_type=sa.VARCHAR(length=100), nullable=True)
    op.alter_column(
        "signals",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "signals",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.create_index(op.f("ix_signals_signal_type"), "signals", ["signal_type"], unique=False)
    op.create_index(op.f("ix_signals_symbol"), "signals", ["symbol"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop partial_tp_history table
    op.drop_index(op.f("ix_partial_tp_history_status"), table_name="partial_tp_history")
    op.drop_index(op.f("ix_partial_tp_history_trade_id"), table_name="partial_tp_history")
    op.drop_table("partial_tp_history")

    # Original auto-generated commands
    op.drop_index(op.f("ix_signals_symbol"), table_name="signals")
    op.drop_index(op.f("ix_signals_signal_type"), table_name="signals")
    op.alter_column(
        "signals",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "signals",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "signals", "strategy_name", existing_type=sa.VARCHAR(length=100), nullable=False
    )
    # ### end Alembic commands ###
