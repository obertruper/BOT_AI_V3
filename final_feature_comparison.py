#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ:
1. –ß—Ç–æ –æ–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ–ª—å (features_240.py)
2. –ß—Ç–æ –±—ã–ª–æ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ (–∞–∞–∞.py)
3. –ß—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–µ–π—á–∞—Å (feature_engineering_v2.py)

–¶–µ–ª—å: —Ç–æ—á–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
"""

import re

from ml.config.features_240 import REQUIRED_FEATURES_240


def analyze_training_file():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—É—á–∞—é—â–∏–π —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤"""
    with open("/mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3/BOT_AI_V2/–∞–∞–∞.py") as f:
        content = f.read()

    # –ò—â–µ–º –≤—Å–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è df['feature'] =
    features = re.findall(r"df\['([^']+)'\]\s*=", content)
    return list(set(features))


def analyze_current_implementation():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é"""
    # –ò–∑ REQUIRED_FEATURES_240
    return REQUIRED_FEATURES_240


def main():
    print("=" * 80)
    print("üîç –§–ò–ù–ê–õ–¨–ù–û–ï –°–†–ê–í–ù–ï–ù–ò–ï –ü–†–ò–ó–ù–ê–ö–û–í")
    print("=" * 80)

    # 1. –ß—Ç–æ –æ–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ–ª—å
    model_expects = REQUIRED_FEATURES_240
    print(f"\n1Ô∏è‚É£ –ú–û–î–ï–õ–¨ –û–ñ–ò–î–ê–ï–¢ (features_240.py): {len(model_expects)} –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

    # 2. –ß—Ç–æ –±—ã–ª–æ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏
    training_features = analyze_training_file()
    print(f"\n2Ô∏è‚É£ –ü–†–ò –û–ë–£–ß–ï–ù–ò–ò (–∞–∞–∞.py): {len(training_features)} –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

    # 3. –ù–∞–π–¥–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–ª–∏—á–∏—è
    print("\n3Ô∏è‚É£ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –†–ê–ó–õ–ò–ß–ò–Ø:")

    # RSI
    rsi_in_model = [f for f in model_expects if "rsi" in f.lower()]
    rsi_in_training = [f for f in training_features if "rsi" in f.lower()]
    print("\nüìä RSI:")
    print(f"  –ú–æ–¥–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç: {rsi_in_model[:5]}")
    print(f"  –ü—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {rsi_in_training[:5]}")

    # BTC features
    btc_in_model = [f for f in model_expects if "btc" in f.lower()]
    btc_in_training = [f for f in training_features if "btc" in f.lower()]
    print("\nüìä BTC features:")
    print(f"  –ú–æ–¥–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç: {btc_in_model}")
    print(f"  –ü—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {btc_in_training}")

    # ETH features
    eth_in_model = [f for f in model_expects if "eth" in f.lower()]
    eth_in_training = [f for f in training_features if "eth" in f.lower()]
    print("\nüìä ETH features:")
    print(f"  –ú–æ–¥–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç: {eth_in_model}")
    print(f"  –ü—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {eth_in_training}")

    # Returns
    returns_in_model = [f for f in model_expects if "returns" in f.lower()]
    returns_in_training = [f for f in training_features if "returns" in f.lower()]
    print("\nüìä Returns:")
    print(f"  –ú–æ–¥–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç: {len(returns_in_model)} returns –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
    print(f"  –ü—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {len(returns_in_training)} returns –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

    # 4. –í—ã–≤–æ–¥
    print("\n" + "=" * 80)
    print("üìå –ì–õ–ê–í–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê:")
    print("=" * 80)

    if len(eth_in_model) > 0 and len(eth_in_training) == 0:
        print("‚ùå –ú–æ–¥–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç ETH –ø—Ä–∏–∑–Ω–∞–∫–∏, –Ω–æ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ –∏—Ö –ù–ï –ë–´–õ–û!")
        print("   –†–ï–®–ï–ù–ò–ï: –ó–∞–ø–æ–ª–Ω–∏—Ç—å ETH –ø—Ä–∏–∑–Ω–∞–∫–∏ –∑–∞–≥–ª—É—à–∫–∞–º–∏ (0.5)")

    if len(rsi_in_model) != len(rsi_in_training):
        print("‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ RSI –ø—Ä–∏–∑–Ω–∞–∫–æ–≤!")
        print(f"   –ú–æ–¥–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç: {len(rsi_in_model)}, –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {len(rsi_in_training)}")

    if "btc_correlation" in training_features:
        print("‚úÖ BTC correlation –±—ã–ª–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏")
        print("   –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å window=96, min_periods=50")

    print("\nüìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
    print("–ú–æ–¥–µ–ª—å –±—ã–ª–∞ –æ–±—É—á–µ–Ω–∞ —Å –î–†–£–ì–ò–ú –Ω–∞–±–æ—Ä–æ–º –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, —á–µ–º —É–∫–∞–∑–∞–Ω–æ –≤ features_240.py")
    print("–ù—É–∂–Ω–æ –ª–∏–±–æ:")
    print("1. –ü–µ—Ä–µ–æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏")
    print("2. –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ–¥ –æ–±—É—á–∞—é—â–∏–π –Ω–∞–±–æ—Ä")
    print("3. –°–æ–∑–¥–∞—Ç—å –º–∞–ø–ø–∏–Ω–≥ –º–µ–∂–¥—É –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏")


if __name__ == "__main__":
    main()
