#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ position mode –Ω–∞ Bybit"""

import asyncio
import os
import sys
from pathlib import Path

sys.path.append(str(Path(__file__).parent))

from dotenv import load_dotenv

from core.logger import setup_logger
from exchanges.bybit.client import BybitClient

logger = setup_logger("check_mode")


async def check_position_mode():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π position mode"""
    load_dotenv()

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    client = BybitClient(
        api_key=os.getenv("BYBIT_API_KEY"),
        api_secret=os.getenv("BYBIT_API_SECRET"),
        sandbox=False,
    )

    try:
        await client.connect()
        logger.info("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ Bybit")

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π position mode
        response = await client._make_request(
            "GET", "/v5/position/switch-mode", {"category": "linear"}
        )
        result = response.get("result", {})

        logger.info("üìä Position mode –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        logger.info(f"  - Position mode: {result}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
        positions = await client.get_positions()
        logger.info(f"\nüíº –¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏: {len(positions)}")

        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º
        logger.info("\nüîÑ –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å one-way mode...")
        try:
            switch_response = await client._make_request(
                "POST",
                "/v5/position/switch-mode",
                {
                    "category": "linear",
                    "symbol": "ETHUSDT",
                    "coin": "USDT",
                    "mode": 0,  # 0 = one-way, 3 = hedge
                },
            )
            logger.info(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {switch_response}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è: {e}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        logger.error(traceback.format_exc())

    finally:
        await client.disconnect()
        logger.info("üîå –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç Bybit")


if __name__ == "__main__":
    asyncio.run(check_position_mode())
