#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API –∫–ª—é—á–µ–π Bybit
"""

import asyncio
import os
from datetime import datetime

import ccxt.async_support as ccxt
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


async def check_api_keys():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π Bybit"""

    print("=" * 60)
    print("üîë –ü–†–û–í–ï–†–ö–ê API –ö–õ–Æ–ß–ï–ô BYBIT")
    print("=" * 60)

    api_key = os.getenv("BYBIT_API_KEY")
    api_secret = os.getenv("BYBIT_API_SECRET")

    if not api_key or not api_secret:
        print("‚ùå API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ!")
        print("–î–æ–±–∞–≤—å—Ç–µ –≤ .env:")
        print("  BYBIT_API_KEY=–≤–∞—à_–∫–ª—é—á")
        print("  BYBIT_API_SECRET=–≤–∞—à_—Å–µ–∫—Ä–µ—Ç")
        return False

    print("‚úÖ API –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ .env")
    print(f"   –ö–ª—é—á: {api_key[:8]}...{api_key[-4:]}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ ccxt
    exchange = None
    try:
        exchange = ccxt.bybit(
            {
                "apiKey": api_key,
                "secret": api_secret,
                "enableRateLimit": True,
                "options": {
                    "defaultType": "linear",  # USDT perpetual
                },
            }
        )

        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")

        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
        balance = await exchange.fetch_balance()
        usdt_balance = balance.get("USDT", {})

        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print("   –ë–∞–ª–∞–Ω—Å USDT:")
        print(f"   - –í—Å–µ–≥–æ: ${usdt_balance.get('total', 0):.2f}")
        print(f"   - –°–≤–æ–±–æ–¥–Ω–æ: ${usdt_balance.get('free', 0):.2f}")
        print(f"   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: ${usdt_balance.get('used', 0):.2f}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏
        print("\nüìà –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–π...")
        positions = await exchange.fetch_positions()

        if positions:
            print(f"   –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π: {len(positions)}")
            for pos in positions:
                if pos["contracts"] > 0:
                    print(
                        f"   - {pos['symbol']}: {pos['side']} {pos['contracts']} –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤"
                    )
        else:
            print("   –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –ª–∏–º–∏—Ç—ã
        print("\n‚ö° –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å—Ç–∞—Ç—É—Å–∞...")
        try:
            api_info = await exchange.private_get_v5_user_query_api()
            print("‚úÖ API —Å—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω")

            if "result" in api_info:
                result = api_info["result"]
                print(f"   - –¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞: {result.get('userStatus', 'Unknown')}")
                print(f"   - ID: {result.get('uid', 'Unknown')}")

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –∫–ª—é—á–µ–π
                if "expiredAt" in result:
                    exp_time = result["expiredAt"]
                    if exp_time and exp_time != "0":
                        exp_date = datetime.fromtimestamp(int(exp_time) / 1000)
                        now = datetime.now()
                        if exp_date < now:
                            print(f"   ‚ùå API –∫–ª—é—á –∏—Å—Ç–µ–∫: {exp_date}")
                            print("   ‚ö†Ô∏è  –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –Ω–∞ bybit.com")
                        else:
                            days_left = (exp_date - now).days
                            print(f"   ‚úÖ –ö–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –µ—â–µ {days_left} –¥–Ω–µ–π")
                else:
                    print("   ‚úÖ –ö–ª—é—á –±–µ—Å—Å—Ä–æ—á–Ω—ã–π")

        except Exception as e:
            if "expired" in str(e).lower():
                print("‚ùå API –∫–ª—é—á –∏—Å—Ç–µ–∫!")
                print(
                    "   –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –Ω–∞ https://www.bybit.com/app/user/api-management"
                )
            elif "invalid" in str(e).lower():
                print("‚ùå API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω!")
                print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞ –∏ —Å–µ–∫—Ä–µ—Ç–∞")
            else:
                print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å API: {e}")

        return True

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

        error_msg = str(e).lower()
        if "expired" in error_msg or "33004" in error_msg:
            print("\nüî¥ API –ö–õ–Æ–ß –ò–°–¢–ï–ö!")
            print("–†–µ—à–µ–Ω–∏–µ:")
            print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://www.bybit.com")
            print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ API Management")
            print("3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á")
            print("4. –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª:")
            print("   BYBIT_API_KEY=–Ω–æ–≤—ã–π_–∫–ª—é—á")
            print("   BYBIT_API_SECRET=–Ω–æ–≤—ã–π_—Å–µ–∫—Ä–µ—Ç")

        elif "invalid" in error_msg or "10003" in error_msg:
            print("\nüî¥ API –ö–õ–Æ–ß –ù–ï–î–ï–ô–°–¢–í–ò–¢–ï–õ–ï–ù!")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
            print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞ –∏ —Å–µ–∫—Ä–µ—Ç–∞")
            print("2. –ù–µ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –≤ .env")
            print("3. –ö–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω –Ω–∞ –±–∏—Ä–∂–µ")

        elif "not enough" in error_msg or "110007" in error_msg:
            print("\n‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ")
            print("–ù–æ API –∫–ª—é—á–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!")

        return False

    finally:
        if exchange:
            await exchange.close()


async def main():
    success = await check_api_keys()

    print("\n" + "=" * 60)
    if success:
        print("‚úÖ API –ö–õ–Æ–ß–ò –†–ê–ë–û–¢–ê–Æ–¢")
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê –° API –ö–õ–Æ–ß–ê–ú–ò")
        print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –∫–ª—é—á–µ–π:")
        print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ bybit.com ‚Üí API Management")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á —Å –ø—Ä–∞–≤–∞–º–∏:")
        print("   - Spot Trading")
        print("   - Derivatives Trading")
        print("   - Read (—á—Ç–µ–Ω–∏–µ)")
        print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –∏ —Å–µ–∫—Ä–µ—Ç")
        print("4. –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª")
        print("5. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: ./stop_all.sh && ./start_with_logs.sh")
    print("=" * 60)


if __name__ == "__main__":
    asyncio.run(main())
