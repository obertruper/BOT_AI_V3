#!/bin/bash
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ BOT Trading v3
"""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}================================================${NC}"
echo -e "${GREEN}üöÄ BOT Trading v3 - –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞${NC}"
echo -e "${BLUE}================================================${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "main.py" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: main.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env${NC}"
    echo -e "${YELLOW}üìù –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏!${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "venv" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞–µ–º...${NC}"
    python3 -m venv venv
    echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ${NC}"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${BLUE}üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
source venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "${BLUE}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
pip install -q --upgrade pip

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
required_packages=(
    "asyncio"
    "asyncpg"
    "fastapi"
    "sqlalchemy"
    "ccxt"
    "torch"
    "pandas"
    "aiohttp"
    "python-telegram-bot"
)

missing_packages=()
for package in "${required_packages[@]}"; do
    if ! python -c "import $package" 2>/dev/null; then
        missing_packages+=($package)
    fi
done

if [ ${#missing_packages[@]} -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: ${missing_packages[*]}${NC}"
    echo -e "${BLUE}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    pip install -r requirements.txt
else
    echo -e "${GREEN}‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
echo -e "${BLUE}üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL...${NC}"
if command -v psql &> /dev/null; then
    if psql -p 5555 -U obertruper -d bot_trading_v3 -c '\l' &> /dev/null; then
        echo -e "${GREEN}‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5555${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL –Ω–∞ –ø–æ—Ä—Ç—É 5555${NC}"
        echo -e "${YELLOW}üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω –∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö bot_trading_v3 —Å–æ–∑–¥–∞–Ω–∞${NC}"
        echo -e "${YELLOW}   sudo -u postgres psql -p 5555 -c \"CREATE DATABASE bot_trading_v3 OWNER obertruper;\"${NC}"
        exit 1
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è psql –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –≤—Ä—É—á–Ω—É—é${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã...${NC}"
if [ -f "scripts/check_v3_readiness.py" ]; then
    python scripts/check_v3_readiness.py
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É${NC}"
        echo -e "${YELLOW}üí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞${NC}"
        exit 1
    fi
fi

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ production
echo -e "${BLUE}================================================${NC}"
echo -e "${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:${NC}"
echo -e "1) Development (—Å –æ—Ç–ª–∞–¥–∫–æ–π –∏ hot-reload)"
echo -e "2) Production (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)"
echo -e "3) –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ (–±–µ–∑ –∑–∞–ø—É—Å–∫–∞)"
read -p "–í–∞—à –≤—ã–±–æ—Ä (1-3): " choice

case $choice in
    1)
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ Development...${NC}"
        export ENVIRONMENT=development
        export LOG_LEVEL=DEBUG
        python main.py
        ;;
    2)
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ Production...${NC}"
        export ENVIRONMENT=production
        export LOG_LEVEL=INFO
        python main.py
        ;;
    3)
        echo -e "${GREEN}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É.${NC}"
        echo -e "${BLUE}–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: python main.py${NC}"
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"
        exit 1
        ;;
esac
