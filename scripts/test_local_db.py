#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL –±–µ–∑ TCP/IP
–†–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Unix socket –¥–ª—è /mnt/SSD –ø—Ä–æ–µ–∫—Ç–∞
"""

import os

import psycopg2


def test_local_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ Unix socket"""

    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –õ–û–ö–ê–õ–¨–ù–û–ì–û –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...")
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print("üìÇ –ü—Ä–æ–µ–∫—Ç –Ω–∞: /mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3")
    print("-" * 50)

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–ë–ï–ó host!)
    db_params = {
        "dbname": "bot_trading_v3",
        "user": "obertruper",
        "port": "5555",  # PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5555!
        # –ù–ï —É–∫–∞–∑—ã–≤–∞–µ–º host –¥–ª—è Unix socket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!
    }

    try:
        print("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è —á–µ—Ä–µ–∑ Unix socket (–ª–æ–∫–∞–ª—å–Ω–æ)...")
        conn = psycopg2.connect(**db_params)
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
        cursor.execute("SELECT version();")
        version = cursor.fetchone()[0]
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä PostgreSQL: {version.split(',')[0]}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –ë–î
        cursor.execute("SELECT current_database(), current_user")
        db_info = cursor.fetchone()
        print(f"üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_info[0]}")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {db_info[1]}")

        # Unix socket –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ /var/run/postgresql/
        print("üîå Unix socket: /var/run/postgresql/ (–ø–æ—Ä—Ç 5555)")

        # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute(
            """
            SELECT COUNT(*) FROM information_schema.tables
            WHERE table_schema = 'public';
        """
        )
        table_count = cursor.fetchone()[0]
        print(f"üìã –¢–∞–±–ª–∏—Ü –≤ –ë–î: {table_count}")

        cursor.close()
        conn.close()

        print("\n‚úÖ –£–°–ü–ï–•! –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("\nüí° –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ –∫–æ–¥–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   psycopg2: dbname='bot_trading_v3' user='obertruper'")
        print("   SQLAlchemy: postgresql://obertruper@/bot_trading_v3")
        print("   Asyncpg: postgresql://obertruper@/bot_trading_v3")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'obertruper' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Unix socket")
        return False


if __name__ == "__main__":
    print("=" * 60)
    print("  –¢–ï–°–¢ –õ–û–ö–ê–õ–¨–ù–û–ì–û –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö PostgreSQL")
    print("=" * 60)
    test_local_connection()
    print("=" * 60)
