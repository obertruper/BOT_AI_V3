#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è config.pkl —Ñ–∞–π–ª–∞ –¥–ª—è ML –º–æ–¥–µ–ª–∏
–≠—Ç–æ—Ç —Ñ–∞–π–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã PatchTSTStrategy
"""

import pickle
from pathlib import Path

import yaml


def create_model_config():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –º–æ–¥–µ–ª–∏"""

    # –ó–∞–≥—Ä—É–∂–∞–µ–º ML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_path = Path("config/ml/ml_config.yaml")
    with open(config_path, "r") as f:
        ml_config = yaml.safe_load(f)

    # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–∑ LLM TRANSFORM)
    model_config = {
        "model": ml_config["model"],
        "loss": ml_config["loss"],
        "features": ml_config["features"],
        "version": "4.0",
        "created_at": "2025-07-28",
        "description": "UnifiedPatchTST model for crypto trading",
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–µ–Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        "output_names": [
            # A. –ë–∞–∑–æ–≤—ã–µ –≤–æ–∑–≤—Ä–∞—Ç—ã (0-3)
            "future_return_15m",
            "future_return_1h",
            "future_return_4h",
            "future_return_12h",
            # B. –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è (4-7)
            "direction_15m",
            "direction_1h",
            "direction_4h",
            "direction_12h",
            # C. –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π –ø—Ä–∏–±—ã–ª–∏ LONG (8-11)
            "long_will_reach_1pct_4h",
            "long_will_reach_2pct_4h",
            "long_will_reach_3pct_12h",
            "long_will_reach_5pct_12h",
            # D. –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π –ø—Ä–∏–±—ã–ª–∏ SHORT (12-15)
            "short_will_reach_1pct_4h",
            "short_will_reach_2pct_4h",
            "short_will_reach_3pct_12h",
            "short_will_reach_5pct_12h",
            # E. –†–∏—Å–∫-–º–µ—Ç—Ä–∏–∫–∏ (16-19)
            "max_drawdown_1h",
            "max_rally_1h",
            "max_drawdown_4h",
            "max_rally_4h",
        ],
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ–ª–∏
        "metrics": {
            "f1_score": 0.414,
            "win_rate": 0.466,
            "training_samples": 1000000,  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        },
    }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    output_path = Path("models/saved/config.pkl")
    output_path.parent.mkdir(parents=True, exist_ok=True)

    with open(output_path, "wb") as f:
        pickle.dump(model_config, f)

    print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {output_path}")

    # –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    yaml_path = Path("models/saved/config.yaml")
    with open(yaml_path, "w") as f:
        yaml.dump(model_config, f, default_flow_style=False)

    print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ YAML: {yaml_path}")

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏:")
    print(f"- –í—Ö–æ–¥–æ–≤: {model_config['model']['input_size']}")
    print(f"- –í—ã—Ö–æ–¥–æ–≤: {model_config['model']['output_size']}")
    print(f"- –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –æ–∫–Ω–æ: {model_config['model']['context_window']} (24 —á–∞—Å–∞)")
    print(f"- F1 Score: {model_config['metrics']['f1_score']}")
    print(f"- Win Rate: {model_config['metrics']['win_rate']:.1%}")

    return model_config


if __name__ == "__main__":
    create_model_config()
