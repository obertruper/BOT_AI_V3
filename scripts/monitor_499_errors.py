#!/usr/bin/env python3
"""
–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ 499 –æ—à–∏–±–æ–∫
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ 499 –æ—à–∏–±–∫–∞—Ö
"""

import asyncio
import os
import re
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


class Error499Monitor:
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ 499 –æ—à–∏–±–æ–∫"""

    def __init__(self):
        self.error_patterns = [
            r"499.*error",
            r"Client.*closed.*request",
            r"Connection.*closed.*prematurely",
            r"WebSocket.*closed",
            r"timeout.*error",
            r"Connection.*timeout",
        ]
        self.error_count = 0
        self.last_check = datetime.now()

    async def monitor_logs(self):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç 499 –æ—à–∏–±–æ–∫"""
        log_files = [
            "data/logs/trading.log",
            "data/logs/system.log",
            "logs/trading.log",
            "logs/system.log",
        ]

        for log_file in log_files:
            if os.path.exists(log_file):
                await self._check_log_file(log_file)

    async def _check_log_file(self, log_file: str):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ª–æ–≥ —Ñ–∞–π–ª–∞"""
        try:
            with open(log_file, encoding="utf-8") as f:
                content = f.read()

            for pattern in self.error_patterns:
                matches = re.findall(pattern, content, re.IGNORECASE)
                if matches:
                    self.error_count += len(matches)
                    print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(matches)} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö 499 –æ—à–∏–±–æ–∫ –≤ {log_file}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∞ {log_file}: {e}")

    async def generate_report(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞"""
        print("üìä –û—Ç—á–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ 499 –æ—à–∏–±–æ–∫")
        print(f"   –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: {self.error_count}")
        print(f"   –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now()}")

        if self.error_count > 0:
            print("   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã 499 –æ—à–∏–±–∫–∏! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å fix_system_issues.py")
        else:
            print("   ‚úÖ 499 –æ—à–∏–±–∫–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    monitor = Error499Monitor()
    await monitor.monitor_logs()
    await monitor.generate_report()


if __name__ == "__main__":
    asyncio.run(main())
