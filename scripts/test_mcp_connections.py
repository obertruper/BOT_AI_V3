#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è BOT_AI_V3
–ó–∞–ø—É—Å–∫–∞—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Claude Code
"""

import json
from pathlib import Path


def check_mcp_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    config_path = Path("/mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3/.mcp.json")

    if not config_path.exists():
        print("‚ùå –§–∞–π–ª .mcp.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    with open(config_path) as f:
        config = json.load(f)

    print("üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤:\n")

    servers = config.get("mcpServers", {})
    for name, server_config in servers.items():
        print(f"‚Ä¢ {name}:")
        print(
            f"  Command: {server_config.get('command')} {' '.join(server_config.get('args', []))}"
        )
        if server_config.get("env"):
            print(f"  Environment: {list(server_config['env'].keys())}")
        print()

    return True


def check_npm_packages():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö npm –ø–∞–∫–µ—Ç–æ–≤"""
    package_json = Path("/mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3/package.json")

    if not package_json.exists():
        print("‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    with open(package_json) as f:
        package_data = json.load(f)

    print("üì¶ MCP –ø–∞–∫–µ—Ç—ã –≤ package.json:\n")

    deps = package_data.get("dependencies", {})
    mcp_packages = {k: v for k, v in deps.items() if "modelcontextprotocol" in k or "mcp" in k}

    for package, version in mcp_packages.items():
        print(f"‚Ä¢ {package}: {version}")

    print()
    return True


def check_env_vars():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    env_file = Path("/mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3/.env")

    if not env_file.exists():
        print("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    print("üîë –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è MCP:\n")

    required_vars = ["PGPORT", "PGUSER", "PGPASSWORD", "PGDATABASE", "GITHUB_TOKEN"]

    with open(env_file) as f:
        env_content = f.read()

    for var in required_vars:
        if f"{var}=" in env_content:
            print(f"‚úÖ {var} - –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {var} - –ù–ï –Ω–∞–π–¥–µ–Ω")

    print()
    return True


def check_directories():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:\n")

    dirs_to_check = [
        "/home/obertruper/.claude/memory",
        "/mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3/node_modules",
        "/mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3/data/logs",
    ]

    all_exist = True
    for dir_path in dirs_to_check:
        path = Path(dir_path)
        if path.exists():
            print(f"‚úÖ {dir_path}")
        else:
            print(f"‚ùå {dir_path} - –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            all_exist = False

    print()
    return all_exist


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîß BOT_AI_V3 - –¢–µ—Å—Ç MCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π\n")
    print("=" * 50)
    print()

    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    config_ok = check_mcp_config()
    packages_ok = check_npm_packages()
    env_ok = check_env_vars()
    dirs_ok = check_directories()

    print("=" * 50)
    print("\nüìä –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:\n")

    if all([config_ok, packages_ok, env_ok, dirs_ok]):
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Claude Code –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É: claude-code mcp list")
        print("3. –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ ~/.cache/claude-cli-nodejs/")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã!")
        print("\nüîß –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        if not packages_ok:
            print("1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: npm install")
        if not dirs_ok:
            print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        if not env_ok:
            print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")

    print("\nüìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3/docs/MCP_STATUS.md")


if __name__ == "__main__":
    main()
