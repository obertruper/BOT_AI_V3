#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏
"""

import asyncio
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.config.config_manager import ConfigManager
from risk_management.manager import RiskManager


async def test_risk_management():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏"""

    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏")
    print("=" * 60)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ConfigManager
    print("1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ConfigManager...")
    config_manager = ConfigManager("config/system.yaml")
    await config_manager.initialize()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    risk_config = config_manager.get_risk_management_config()
    if risk_config:
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        print(f"   - –í–∫–ª—é—á–µ–Ω: {risk_config.get('enabled', False)}")
        print(f"   - –†–∏—Å–∫ –Ω–∞ —Å–¥–µ–ª–∫—É: {risk_config.get('risk_per_trade', 0)}")
        print(f"   - –ú–∞–∫—Å–∏–º—É–º –ø–æ–∑–∏—Ü–∏–π: {risk_config.get('max_positions', 0)}")
    else:
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        return

    # –°–æ–∑–¥–∞–Ω–∏–µ RiskManager
    print("\n3. –°–æ–∑–¥–∞–Ω–∏–µ RiskManager...")
    risk_manager = RiskManager(risk_config)
    print("‚úÖ RiskManager —Å–æ–∑–¥–∞–Ω")
    print(f"   - –í–∫–ª—é—á–µ–Ω: {risk_manager.enabled}")
    print(f"   - –¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å: {risk_manager.current_profile}")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —Ä–∏—Å–∫–∞
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —Ä–∏—Å–∫–∞...")
    profiles = ["standard", "conservative", "very_conservative"]
    for profile in profiles:
        profile_config = risk_manager.get_risk_profile(profile)
        if profile_config:
            print(
                f"   {profile}: –º–Ω–æ–∂–∏—Ç–µ–ª—å {profile_config.get('risk_multiplier', 1.0)}"
            )

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞–∫—Ç–∏–≤–æ–≤
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞–∫—Ç–∏–≤–æ–≤...")
    test_symbols = ["BTCUSDT", "DOGEUSDT", "ETHUSDT", "PEPEUSDT"]
    for symbol in test_symbols:
        category = risk_manager.get_asset_category(symbol)
        if category:
            print(f"   {symbol}: –º–Ω–æ–∂–∏—Ç–µ–ª—å {category.get('risk_multiplier', 1.0)}")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏
    print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏...")
    test_signal = {
        "symbol": "BTCUSDT",
        "side": "buy",
        "leverage": 5,
        "position_size": 10.0,  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏
        "ml_predictions": {"profit_probability": 0.7, "loss_probability": 0.3},
    }

    position_size = risk_manager.calculate_position_size(test_signal)
    print(f"   –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è BTCUSDT: ${position_size}")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏
    for profile in profiles:
        risk_manager.set_risk_profile(profile)
        position_size = risk_manager.calculate_position_size(test_signal)
        print(f"   {profile} –ø—Ä–æ—Ñ–∏–ª—å: ${position_size}")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∏—Å–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–∞
    print("\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∏—Å–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–∞...")
    risk_check = await risk_manager.check_signal_risk(test_signal)
    print(f"   –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∏—Å–∫–æ–≤: {'‚úÖ –ü—Ä–æ—à–ª–∞' if risk_check else '‚ùå –ù–µ –ø—Ä–æ—à–ª–∞'}")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤
    print("\n8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤...")
    global_risk = await risk_manager.check_global_risks()
    print(
        f"   –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏: {'‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π' if global_risk.requires_action else '‚úÖ –í –Ω–æ—Ä–º–µ'}"
    )
    if global_risk.requires_action:
        print(f"   –î–µ–π—Å—Ç–≤–∏–µ: {global_risk.action}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {global_risk.message}")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ML-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    print("\n9. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ML-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    if risk_manager.ml_enabled:
        print("   ‚úÖ ML-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞")
        ml_config = config_manager.get_ml_integration_config()
        print(f"   –ü–æ—Ä–æ–≥–∏: {ml_config.get('thresholds', {})}")
    else:
        print("   ‚ö†Ô∏è ML-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    print("\n10. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    monitoring_config = config_manager.get_monitoring_config()
    if monitoring_config:
        print(
            f"   –û–∂–∏–¥–∞–µ–º–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏: {monitoring_config.get('expected_buy_accuracy', 0)}%"
        )
        print(
            f"   –û–∂–∏–¥–∞–µ–º–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏: {monitoring_config.get('expected_sell_accuracy', 0)}%"
        )
        print(
            f"   –ü–æ—Ä–æ–≥ –∞–ª–µ—Ä—Ç–∞: {monitoring_config.get('accuracy_alert_threshold', 0)}%"
        )

    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìä –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:")
    print("   ‚Ä¢ –ì–∏–±–∫–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏ —Ä–∏—Å–∫–∞ (standard, conservative, very_conservative)")
    print("   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–æ–≤ (–º–µ–º–∫–æ–∏–Ω—ã vs —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã)")
    print("   ‚Ä¢ ML-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Ä–∏—Å–∫–æ–≤")
    print("   ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω—ã–π SL/TP —Å —Ç—Ä–µ–π–ª–∏–Ω–≥–æ–º –∏ –∑–∞—â–∏—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏")
    print("   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ML-–º–æ–¥–µ–ª–∏")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è—Ö")


if __name__ == "__main__":
    asyncio.run(test_risk_management())
