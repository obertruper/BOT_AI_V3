#!/bin/bash
# üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ BOT_AI_V3
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "main.py" ]; then
    error "–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ BOT_AI_V3"
fi

# ASCII –±–∞–Ω–Ω–µ—Ä
echo -e "${BLUE}"
cat << "EOF"
 ____   ___ _____      _    ___  __     ______
| __ ) / _ \_   _|    / \  |_ _| \ \   / |___ /
|  _ \| | | || |     / _ \  | |   \ \ / /  |_ \
| |_) | |_| || |    / ___ \ | |    \ V /  ___) |
|____/ \___/ |_|   /_/   \_\___|    \_/  |____/

        Multi-Exchange AI Trading Platform
EOF
echo -e "${NC}"

# –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

# Python –≤–µ—Ä—Å–∏—è
python_version=$(python3 --version 2>&1 | awk '{print $2}')
required_version="3.8"
if [ "$(printf '%s\n' "$required_version" "$python_version" | sort -V | head -n1)" != "$required_version" ]; then
    error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python $required_version –∏–ª–∏ –≤—ã—à–µ. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: $python_version"
fi
info "Python –≤–µ—Ä—Å–∏—è: $python_version ‚úì"

# PostgreSQL
if ! command -v psql &> /dev/null; then
    error "PostgreSQL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL –Ω–∞ –ø–æ—Ä—Ç—É 5555
if psql -p 5555 -U obertruper -d bot_trading_v3 -c "SELECT 1;" &> /dev/null; then
    info "PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5555 ‚úì"
else
    error "PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5555. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î."
fi

# Node.js
if command -v node &> /dev/null; then
    node_version=$(node --version)
    info "Node.js –≤–µ—Ä—Å–∏—è: $node_version ‚úì"
else
    warning "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. MCP —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å."
fi

# –≠–¢–ê–ü 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –°–æ–∑–¥–∞–Ω–∏–µ venv –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "venv" ]; then
    log "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv
source venv/bin/activate
info "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ ‚úì"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
pip install --upgrade pip setuptools wheel --quiet

# –≠–¢–ê–ü 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install -r requirements.txt --quiet
info "–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úì"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
pip install -e ".[monitoring]" --quiet 2>/dev/null || warning "Monitoring –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
pip install -e ".[telegram]" --quiet 2>/dev/null || warning "Telegram –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if command -v npm &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install --silent
    info "Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úì"
fi

# –≠–¢–ê–ü 4: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –°–æ–∑–¥–∞–Ω–∏–µ .env –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f ".env" ]; then
    cp .env.example .env
    warning ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á–∏!"

    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    read -p "–•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ–π—á–∞—Å? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
        SECRET_KEY=$(python3 -c 'import secrets; print(secrets.token_urlsafe(32))')
        sed -i "s/your_secret_key_for_jwt/$SECRET_KEY/g" .env

        echo "–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á–∏ –¥–ª—è Bybit (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞):"
        read -p "BYBIT_API_KEY: " bybit_key
        read -p "BYBIT_API_SECRET: " bybit_secret

        if [ ! -z "$bybit_key" ] && [ ! -z "$bybit_secret" ]; then
            sed -i "s/your_bybit_api_key/$bybit_key/g" .env
            sed -i "s/your_bybit_api_secret/$bybit_secret/g" .env
            info "API –∫–ª—é—á–∏ Bybit —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã ‚úì"
        fi
    fi
else
    info "–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚úì"
fi

# –≠–¢–ê–ü 5: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –º–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
if python3 scripts/test_local_db.py &> /dev/null; then
    info "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ ‚úì"
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env"
fi

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
log "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Alembic..."
alembic upgrade head
info "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã ‚úì"

# –≠–¢–ê–ü 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ ML –º–æ–¥–µ–ª–∏
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ ML –º–æ–¥–µ–ª–∏..."

model_path="models/saved/best_model_20250728_215703.pth"
scaler_path="models/saved/data_scaler.pkl"
config_path="models/saved/config.pkl"

if [ -f "$model_path" ] && [ -f "$scaler_path" ] && [ -f "$config_path" ]; then
    info "ML –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞ ‚úì"
else
    warning "ML –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. ML —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å."
    warning "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–∏ –∏–∑ LLM TRANSFORM –ø—Ä–æ–µ–∫—Ç–∞ –≤ models/saved/"
fi

# –≠–¢–ê–ü 7: –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–°–æ–∑–¥–∞—Ç—å systemd —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞? (—Ç—Ä–µ–±—É–µ—Ç sudo) (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    log "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤..."

    # –°–µ—Ä–≤–∏—Å –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞
    sudo tee /etc/systemd/system/bot-trading.service > /dev/null << EOF
[Unit]
Description=BOT Trading v3 Engine
After=network.target postgresql.service

[Service]
Type=simple
User=$USER
WorkingDirectory=$(pwd)
Environment="PATH=$(pwd)/venv/bin"
ExecStart=$(pwd)/venv/bin/python main.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

    # –°–µ—Ä–≤–∏—Å –¥–ª—è –≤–µ–±-–ø–∞–Ω–µ–ª–∏
    sudo tee /etc/systemd/system/bot-trading-web.service > /dev/null << EOF
[Unit]
Description=BOT Trading v3 Web Interface
After=network.target bot-trading.service

[Service]
Type=simple
User=$USER
WorkingDirectory=$(pwd)
Environment="PATH=$(pwd)/venv/bin"
ExecStart=$(pwd)/venv/bin/python web/launcher.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable bot-trading
    sudo systemctl enable bot-trading-web
    info "Systemd —Å–µ—Ä–≤–∏—Å—ã —Å–æ–∑–¥–∞–Ω—ã ‚úì"
fi

# –§–ò–ù–ê–õ: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É
echo
echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo -e "${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo
echo "1. –í –ø–µ—Ä–≤–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ (—Ç–æ—Ä–≥–æ–≤—ã–π –¥–≤–∏–∂–æ–∫):"
echo "   ${BLUE}source venv/bin/activate${NC}"
echo "   ${BLUE}python3 main.py${NC}"
echo
echo "2. –í–æ –≤—Ç–æ—Ä–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ (–≤–µ–±-–ø–∞–Ω–µ–ª—å):"
echo "   ${BLUE}source venv/bin/activate${NC}"
echo "   ${BLUE}python3 web/launcher.py --reload --debug${NC}"
echo
echo "3. –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
echo "   ${YELLOW}http://localhost:8080${NC}"
echo "   API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ${YELLOW}http://localhost:8080/api/docs${NC}"
echo

if [ -f ".env" ] && grep -q "your_" .env; then
    echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á–∏ –≤ —Ñ–∞–π–ª–µ .env${NC}"
fi

echo
echo "–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   ${BLUE}sudo systemctl start bot-trading${NC}"
echo "   ${BLUE}sudo systemctl start bot-trading-web${NC}"
echo
echo -e "${GREEN}Happy Trading! üöÄ${NC}"
