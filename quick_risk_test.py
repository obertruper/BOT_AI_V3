#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞ —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π —Ä–∏—Å–∫–∞
"""

import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from core.config.config_manager import ConfigManager
from trading.engine import TradingEngine


async def quick_trading_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–¥–µ—Ä–∞ —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π —Ä–∏—Å–∫–∞"""

    print("=" * 60)
    print("–ë–´–°–¢–†–´–ô –¢–ï–°–¢ –¢–û–†–ì–û–í–û–ì–û –î–í–ò–ñ–ö–ê")
    print("=" * 60)

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_manager = ConfigManager()
        await config_manager.initialize()
        config = config_manager.get_config()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ—Ä–≥–æ–≤—ã–π –¥–≤–∏–∂–æ–∫
        trading_engine = TradingEngine(config)
        await trading_engine.initialize()

        print("‚úÖ TradingEngine –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª
        test_signal = {
            "id": "test_signal_001",
            "symbol": "BTC/USDT",
            "side": "buy",
            "action": "open",
            "entry_price": 95000.0,
            "stop_loss": 94050.0,
            "take_profit": 96900.0,
            "confidence": 0.75,
            "leverage": 5,
            "strategy": "ml_test",
            "timestamp": "2025-08-19T14:00:00Z",
        }

        print("\nüìä –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª:")
        print(f"  –°–∏–º–≤–æ–ª: {test_signal['symbol']}")
        print(f"  –°—Ç–æ—Ä–æ–Ω–∞: {test_signal['side']}")
        print(f"  –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: ${test_signal['entry_price']}")
        print(f"  –ü–ª–µ—á–æ: {test_signal['leverage']}x")

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª
        print("\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞...")
        result = await trading_engine.process_signal(test_signal)

        if result:
            print("‚úÖ –°–∏–≥–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        else:
            print("‚ùå –°–∏–≥–Ω–∞–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω")

        print("\nüìà –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–≤–∏–∂–∫–∞...")
        stats = trading_engine.get_stats() if hasattr(trading_engine, "get_stats") else {}
        print(f"  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()

    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")


if __name__ == "__main__":
    asyncio.run(quick_trading_test())
