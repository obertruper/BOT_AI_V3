#!/usr/bin/env python3
"""
–†–µ–∞–ª—å–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –±—Ä–∞—É–∑–µ—Ä–æ–º —á–µ—Ä–µ–∑ Playwright MCP
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ Claude –º–æ–∂–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ AI
"""

import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from ai_agents import ClaudeCodeOptions, ClaudeCodeSDK, ThinkingMode


async def simple_browser_demo():
    """
    –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä: Claude –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç
    """
    print("üåê –ü–†–û–°–¢–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ë–†–ê–£–ó–ï–†–ê\n")

    sdk = ClaudeCodeSDK()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±—Ä–∞—É–∑–µ—Ä–æ–º
    options = ClaudeCodeOptions(
        model="sonnet",
        thinking_mode=ThinkingMode.NORMAL,
        allowed_tools=[
            "Write",
            # Playwright MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_take_screenshot",
            "mcp__playwright__browser_snapshot",
        ],
        max_turns=5,
    )

    task = """
    –ò—Å–ø–æ–ª—å–∑—É–π Playwright —á—Ç–æ–±—ã:
    1. –û—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä (–æ–Ω –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤–∏–∑—É–∞–ª—å–Ω–æ, –Ω–µ –≤ headless —Ä–µ–∂–∏–º–µ)
    2. –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ https://coinmarketcap.com
    3. –ü–æ–¥–æ–∂–¥–∏ –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
    4. –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–ø-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
    5. –°–æ—Ö—Ä–∞–Ω–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∫–∞–∫ crypto_top10.png

    –≠—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞ —Å –Ω–∞—Å—Ç–æ—è—â–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º!
    """

    print("ü§ñ Claude –∑–∞–ø—É—Å–∫–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä...\n")

    result = await sdk.query(task, options)
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª crypto_top10.png")


async def ai_conversation_demo():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å ChatGPT —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
    """
    print("\n\nüí¨ –î–ò–ê–õ–û–ì –° AI –ß–ï–†–ï–ó –ë–†–ê–£–ó–ï–†\n")

    sdk = ClaudeCodeSDK()

    options = ClaudeCodeOptions(
        model="opus",  # –î–ª—è —Å–ª–æ–∂–Ω–æ–π –∑–∞–¥–∞—á–∏
        thinking_mode=ThinkingMode.THINK,
        allowed_tools=[
            "Write",
            "Read",
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_click",
            "mcp__playwright__browser_type",
            "mcp__playwright__browser_snapshot",
            "mcp__playwright__browser_wait_for",
            "mcp__playwright__browser_take_screenshot",
        ],
        max_turns=20,
    )

    task = """
    –ü–æ–ø—Ä–æ–±—É–π –æ—Ç–∫—Ä—ã—Ç—å ChatGPT –∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å:

    1. –û—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä (–≤–∏–∑—É–∞–ª—å–Ω–æ, –Ω–µ headless)
    2. –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ https://chatgpt.com –∏–ª–∏ https://chat.openai.com
    3. –ï—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ - —Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏ –∫–∞–∫ chatgpt_login.png
    4. –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É - –ø–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å:
       "What are the key components of a high-frequency trading system?"
    5. –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

    –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏, —Å–æ–∑–¥–∞–π —Ñ–∞–π–ª ai_access_report.md —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º:
    - –ß—Ç–æ —Ç—ã —É–≤–∏–¥–µ–ª
    - –ö–∞–∫–∏–µ —à–∞–≥–∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è–ª
    - –ü–æ—á–µ–º—É –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å
    - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

    –í–ê–ñ–ù–û: –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤–∏–∑—É–∞–ª—å–Ω–æ, —Ç—ã —É–≤–∏–¥–∏—à—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è!
    """

    print("üåê Claude –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ —Å AI...")
    print("‚ö†Ô∏è  –í—ã —É–≤–∏–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä!\n")

    result = await sdk.query(task, options)
    print("\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω")


async def market_research_demo():
    """
    –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
    """
    print("\n\nüìä –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –†–´–ù–ö–ê –ß–ï–†–ï–ó –ë–†–ê–£–ó–ï–†\n")

    sdk = ClaudeCodeSDK()

    options = ClaudeCodeOptions(
        model="sonnet",
        thinking_mode=ThinkingMode.NORMAL,
        allowed_tools=[
            "Write",
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_snapshot",
            "mcp__playwright__browser_wait_for",
            "mcp__playwright__browser_take_screenshot",
            "mcp__sequential-thinking__sequentialthinking",  # –î–ª—è –∞–Ω–∞–ª–∏–∑–∞
        ],
        max_turns=15,
    )

    task = """
    –ü—Ä–æ–≤–µ–¥–∏ –±—ã—Å—Ç—Ä–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ —Ä—ã–Ω–∫–∞:

    1. –û—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä (–≤–∏–∑—É–∞–ª—å–Ω–æ)
    2. –ó–∞–π–¥–∏ –Ω–∞ TradingView.com
    3. –ù–∞–π–¥–∏ –≥—Ä–∞—Ñ–∏–∫ BTC/USDT
    4. –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –≥—Ä–∞—Ñ–∏–∫–∞
    5. –ó–∞–π–¥–∏ –Ω–∞ CoinMarketCap.com
    6. –°–æ–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–ø-5 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:
       - –ù–∞–∑–≤–∞–Ω–∏–µ
       - –¶–µ–Ω–∞
       - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á
       - –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è
    7. –°–æ–∑–¥–∞–π —Ñ–∞–π–ª market_summary.md —Å:
       - –î–∞–Ω–Ω—ã–º–∏ –æ —Ç–æ–ø-5 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
       - –û–±—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ä—ã–Ω–∫–∞ (—Ä–∞—Å—Ç–µ—Ç/–ø–∞–¥–∞–µ—Ç)
       - –°–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏

    –ò—Å–ø–æ–ª—å–∑—É–π Sequential Thinking –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö.
    """

    print("üìà Claude –∏—Å—Å–ª–µ–¥—É–µ—Ç –∫—Ä–∏–ø—Ç–æ —Ä—ã–Ω–æ–∫...")
    print("üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤–∏–∑—É–∞–ª—å–Ω–æ\n")

    result = await sdk.query(task, options)
    print("\n‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ market_summary.md")


async def main():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    print("=" * 60)
    print("üåê –†–ï–ê–õ–¨–ù–ê–Ø –†–ê–ë–û–¢–ê –° –ë–†–ê–£–ó–ï–†–û–ú –ß–ï–†–ï–ó PLAYWRIGHT")
    print("=" * 60)
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û:")
    print("- –ë—Ä–∞—É–∑–µ—Ä –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å—Å—è –í–ò–ó–£–ê–õ–¨–ù–û (–Ω–µ headless)")
    print("- –í—ã —É–≤–∏–¥–∏—Ç–µ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print("- –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∞–π—Ç–æ–≤ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è\n")

    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é:")
    print("1. –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç")
    print("2. –ü–æ–ø—ã—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞ —Å ChatGPT")
    print("3. –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ —Ä—ã–Ω–∫–∞")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")

    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ")

    demos = {
        "1": simple_browser_demo,
        "2": ai_conversation_demo,
        "3": market_research_demo,
    }

    try:
        if choice == "4":
            for demo in demos.values():
                await demo()
                print("\n" + "=" * 60 + "\n")
        elif choice in demos:
            await demos[choice]()
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Playwright: npx playwright install chromium")
        print("2. –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ MCP —Å–µ—Ä–≤–µ—Ä—ã")
        print("3. –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ Claude CLI")


if __name__ == "__main__":
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –±—Ä–∞—É–∑–µ—Ä–æ–º...")
    print("\nüìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:")
    print("1. Playwright: npx playwright install chromium")
    print("2. MCP Playwright —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω")
    print("3. Claude CLI –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")

    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    asyncio.run(main())
