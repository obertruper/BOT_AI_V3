#!/usr/bin/env python3
"""
–†–µ–∞–ª—å–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è: Claude Code SDK –∑–∞–ø—É—Å–∫–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –æ–±—â–∞–µ—Ç—Å—è —Å ChatGPT –∏ Grok
–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
"""

import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from ai_agents import ClaudeCodeOptions, ClaudeCodeSDK, ThinkingMode


async def real_browser_ai_collaboration():
    """
    –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä: Claude –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –æ–±—â–∞–µ—Ç—Å—è —Å –¥—Ä—É–≥–∏–º–∏ AI
    """
    print("üöÄ –†–ï–ê–õ–¨–ù–ê–Ø –ö–û–õ–õ–ê–ë–û–†–ê–¶–ò–Ø AI –ß–ï–†–ï–ó –ë–†–ê–£–ó–ï–†\n")
    print("Claude –±—É–¥–µ—Ç:")
    print("1. –û—Ç–∫—Ä—ã–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä —Å Playwright")
    print("2. –ó–∞—Ö–æ–¥–∏—Ç—å –Ω–∞ ChatGPT –∏ Grok")
    print("3. –í–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥ —Å –Ω–∏–º–∏ –æ —Ç–æ—Ä–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
    print("4. –°–æ–±–∏—Ä–∞—Ç—å –∏—Ö –æ—Ç–≤–µ—Ç—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ\n")

    sdk = ClaudeCodeSDK()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –±—Ä–∞—É–∑–µ—Ä–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
    options = ClaudeCodeOptions(
        model="opus",  # –î–ª—è —Å–ª–æ–∂–Ω–æ–π –∑–∞–¥–∞—á–∏ –Ω—É–∂–Ω–∞ –º–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å
        thinking_mode=ThinkingMode.THINK_HARD,
        allowed_tools=[
            "Read",
            "Write",
            "Edit",
            "Bash",
            # MCP –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_click",
            "mcp__playwright__browser_type",
            "mcp__playwright__browser_snapshot",
            "mcp__playwright__browser_wait_for",
            "mcp__playwright__browser_take_screenshot",
            # Sequential thinking –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            "mcp__sequential-thinking__sequentialthinking",
        ],
        max_turns=30,  # –ú–Ω–æ–≥–æ —à–∞–≥–æ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
    )

    # –ó–∞–¥–∞—á–∞ –¥–ª—è –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏
    task = """
    –ò—Å–ø–æ–ª—å–∑—É–π Playwright —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—é —Å ChatGPT –∏ Grok
    –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.

    –í–ê–ñ–ù–û: –≠—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞, –Ω–µ —Å–∏–º—É–ª—è—Ü–∏—è!

    –®–∞–≥–∏:
    1. –û—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ Playwright
    2. –ó–∞–π–¥–∏ –Ω–∞ chat.openai.com (–∏–ª–∏ chatgpt.com)
    3. –ó–∞–¥–∞–π ChatGPT –≤–æ–ø—Ä–æ—Å: "–ö–∞–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω–∞ –≤–∫–ª—é—á–∞—Ç—å –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω–∞—è
       —Ç–æ—Ä–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç? –î–∞–π 5 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º."
    4. –î–æ–∂–¥–∏—Å—å –æ—Ç–≤–µ—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–∏ –µ–≥–æ
    5. –û—Ç–∫—Ä–æ–π –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É –∏ –∑–∞–π–¥–∏ –Ω–∞ grok.x.ai (–∏–ª–∏ x.com/i/grok)
    6. –ü–æ–∫–∞–∂–∏ Grok –æ—Ç–≤–µ—Ç ChatGPT –∏ —Å–ø—Ä–æ—Å–∏: "ChatGPT –ø—Ä–µ–¥–ª–æ–∂–∏–ª —ç—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è HFT
       —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: [–≤—Å—Ç–∞–≤—å –æ—Ç–≤–µ—Ç]. –ß—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å? –ß—Ç–æ –±—ã —Ç—ã –¥–æ–±–∞–≤–∏–ª –∏–ª–∏ –∏–∑–º–µ–Ω–∏–ª?"
    7. –°–æ—Ö—Ä–∞–Ω–∏ –æ—Ç–≤–µ—Ç Grok
    8. –í–µ—Ä–Ω–∏—Å—å –∫ ChatGPT –∏ –ø–æ–∫–∞–∂–∏ –µ–º—É –æ—Ç–≤–µ—Ç Grok –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –º–Ω–µ–Ω–∏—è
    9. –ù–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–π —Ñ–∞–π–ª strategy_components.md —Å:
       - –ö–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
       - –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º –∫–∞–∂–¥–æ–≥–æ
       - –ü–ª–∞–Ω–æ–º –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏–∏

    –î–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤–∞–∂–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤ –¥–∏–∞–ª–æ–≥–∞.
    –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, —É–∫–∞–∂–∏ —ç—Ç–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–ª–∞–Ω.
    """

    print("ü§ñ Claude –∑–∞–ø—É—Å–∫–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—é...\n")

    try:
        result = await sdk.query(task, options)
        print("\n‚úÖ –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ strategy_components.md")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        if Path("strategy_components.md").exists():
            print("\nüìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:")
            with open("strategy_components.md", "r") as f:
                print(f.read()[:500] + "...")

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ù—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–∞—Ö AI")
        print("- –ë—Ä–∞—É–∑–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: npx playwright install)")
        print("- MCP Playwright —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")


async def automated_cross_verification():
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫—Ä–æ—Å—Å-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ AI
    """
    print("\n\nüîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ö–†–û–°–°-–í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø\n")

    sdk = ClaudeCodeSDK()

    # –°–Ω–∞—á–∞–ª–∞ Claude —Å–æ–∑–¥–∞–µ—Ç —Ç–æ—Ä–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
    print("1Ô∏è‚É£ Claude —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é...")

    strategy_task = """
    –°–æ–∑–¥–∞–π –ø—Ä–æ—Å—Ç—É—é momentum-based —Ç–æ—Ä–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è BTC/USDT.
    –í–∫–ª—é—á–∏:
    1. –£—Å–ª–æ–≤–∏—è –≤—Ö–æ–¥–∞ –≤ –ø–æ–∑–∏—Ü–∏—é
    2. –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –∏ risk management
    3. Stop loss –∏ take profit
    4. –£—Å–ª–æ–≤–∏—è –≤—ã—Ö–æ–¥–∞

    –°–æ—Ö—Ä–∞–Ω–∏ –≤ momentum_strategy.py —Å –ø–æ–ª–Ω–æ–π –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏–µ–π.
    """

    strategy_options = ClaudeCodeOptions(
        model="sonnet", allowed_tools=["Write"], max_turns=3
    )

    await sdk.query(strategy_task, strategy_options)
    print("‚úÖ –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∞")

    # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä —Å –¥—Ä—É–≥–∏–º–∏ AI
    print("\n2Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º –∫—Ä–æ—Å—Å-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä...")

    verification_task = """
    –û—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ–≤–µ–¥–∏ –∫—Ä–æ—Å—Å-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é —Å–æ–∑–¥–∞–Ω–Ω–æ–π momentum_strategy.py:

    1. –ü—Ä–æ—á–∏—Ç–∞–π –∫–æ–¥ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–∑ momentum_strategy.py
    2. –û—Ç–∫—Ä–æ–π ChatGPT –∏ –ø–æ–ø—Ä–æ—Å–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞:
       - –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
       - –†–∏—Å–∫–∏ –∏ —É—è–∑–≤–∏–º–æ—Å—Ç–∏
       - –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
    3. –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ Claude.ai, –æ—Ç–∫—Ä–æ–π –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –∏ –ø–æ–ø—Ä–æ—Å–∏
       –≤—Ç–æ—Ä–æ–µ –º–Ω–µ–Ω–∏–µ –æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    4. –°–æ–∑–¥–∞–π —Ñ–∞–π–ª strategy_verification_report.md —Å:
       - –ù–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏
       - –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –æ—Ç –∫–∞–∂–¥–æ–≥–æ AI
       - –§–∏–Ω–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
       - –£—Ä–æ–≤–Ω–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ (1-10)

    –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ AI —Å–∞–π—Ç–∞–º, —Å–æ–∑–¥–∞–π –ø–ª–∞–Ω
    –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.
    """

    verification_options = ClaudeCodeOptions(
        model="opus",
        thinking_mode=ThinkingMode.THINK,
        allowed_tools=[
            "Read",
            "Write",
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_click",
            "mcp__playwright__browser_type",
            "mcp__playwright__browser_snapshot",
            "mcp__playwright__browser_take_screenshot",
        ],
        max_turns=20,
    )

    await sdk.query(verification_task, verification_options)
    print("‚úÖ –ö—Ä–æ—Å—Å-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


async def multi_ai_research():
    """
    –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ AI –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    """
    print("\n\nüî¨ MULTI-AI –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï\n")

    sdk = ClaudeCodeSDK()

    research_task = """
    –ü—Ä–æ–≤–µ–¥–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –Ω–∏–∑–∫–æ–ª–∞—Ç–µ–Ω—Ç–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ"
    –∏—Å–ø–æ–ª—å–∑—É—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:

    1. –û—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ Playwright
    2. –ò—Å—Å–ª–µ–¥—É–π —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã:
       - Google: "crypto HFT low latency best practices 2024"
       - –ü—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–≤—ã–µ 3-5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    3. –ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å—ã –Ω–∞:
       - ChatGPT: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã –Ω–∏–∑–∫–æ–π –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
       - Claude.ai: –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
       - Perplexity.ai: –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ papers
    4. –°–æ–±–µ—Ä–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ:
       - –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è (Rust vs C++ vs Go)
       - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
       - –°–µ—Ç–µ–≤—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
       - Hardware —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    5. –°–æ–∑–¥–∞–π comprehensive –æ—Ç—á–µ—Ç low_latency_research.md

    –î–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –∫–ª—é—á–µ–≤—ã—Ö –Ω–∞—Ö–æ–¥–æ–∫.
    –ï—Å–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–∞–π—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏.
    """

    research_options = ClaudeCodeOptions(
        model="opus",
        thinking_mode=ThinkingMode.THINK_HARDER,
        allowed_tools=[
            "Write",
            "Edit",
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_click",
            "mcp__playwright__browser_type",
            "mcp__playwright__browser_snapshot",
            "mcp__playwright__browser_wait_for",
            "mcp__playwright__browser_take_screenshot",
            "mcp__sequential-thinking__sequentialthinking",
        ],
        max_turns=40,
    )

    print("üîç Claude –ø—Ä–æ–≤–æ–¥–∏—Ç multi-source –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ...")
    print("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...\n")

    await sdk.query(research_task, research_options)
    print("\n‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


async def live_market_analysis():
    """
    –†–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
    """
    print("\n\nüìä LIVE MARKET ANALYSIS\n")

    sdk = ClaudeCodeSDK()

    market_task = """
    –ü—Ä–æ–≤–µ–¥–∏ —Ä–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫—Ä–∏–ø—Ç–æ —Ä—ã–Ω–∫–∞:

    1. –û—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä
    2. –ó–∞–π–¥–∏ –Ω–∞ TradingView.com –∏–ª–∏ CoinMarketCap.com
    3. –°–æ–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –æ:
       - –¢–æ–ø 10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
       - –ò—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á
       - –û–±—â–∏–π sentiment —Ä—ã–Ω–∫–∞
    4. –ó–∞–π–¥–∏ –Ω–∞ crypto –Ω–æ–≤–æ—Å—Ç–Ω—ã–µ —Å–∞–π—Ç—ã (CoinDesk, CoinTelegraph)
    5. –ù–∞–π–¥–∏ 3-5 –∫–ª—é—á–µ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ —Ä—ã–Ω–æ–∫
    6. –ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, —Å–ø—Ä–æ—Å–∏ –º–Ω–µ–Ω–∏–µ —É AI:
       - "Based on current market data [data], what's the short-term outlook?"
    7. –°–æ–∑–¥–∞–π market_analysis_report.md —Å:
       - –¢–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ä—ã–Ω–∫–∞
       - –ö–ª—é—á–µ–≤—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏
       - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –∞–Ω–∞–ª–∏–∑–æ–º (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
       - –ü—Ä–æ–≥–Ω–æ–∑–æ–º –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 24-48 —á–∞—Å–æ–≤
       - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –¥–ª—è —Ç—Ä–µ–π–¥–µ—Ä–æ–≤

    –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
    """

    market_options = ClaudeCodeOptions(
        model="sonnet",
        thinking_mode=ThinkingMode.NORMAL,
        allowed_tools=[
            "Write",
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_snapshot",
            "mcp__playwright__browser_take_screenshot",
            "mcp__playwright__browser_wait_for",
        ],
        max_turns=25,
    )

    print("üìà Claude –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫...")
    await sdk.query(market_task, market_options)
    print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")


async def main():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("=" * 60)
    print("üåê –†–ï–ê–õ–¨–ù–ê–Ø AI –ö–û–õ–õ–ê–ë–û–†–ê–¶–ò–Ø –ß–ï–†–ï–ó –ë–†–ê–£–ó–ï–†")
    print("=" * 60)
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é:")
    print("1. AI –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä (ChatGPT + Grok)")
    print("2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫—Ä–æ—Å—Å-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
    print("3. Multi-AI –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ")
    print("4. Live –∞–Ω–∞–ª–∏–∑ –∫—Ä–∏–ø—Ç–æ —Ä—ã–Ω–∫–∞")
    print("5. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")

    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-5): ")

    demos = {
        "1": ("AI –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è", real_browser_ai_collaboration),
        "2": ("–ö—Ä–æ—Å—Å-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è", automated_cross_verification),
        "3": ("Multi-AI –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", multi_ai_research),
        "4": ("Live Market –∞–Ω–∞–ª–∏–∑", live_market_analysis),
    }

    try:
        if choice == "5":
            for name, func in demos.values():
                print(f"\n\n{'='*60}")
                print(f"–ó–∞–ø—É—Å–∫: {name}")
                print("=" * 60)
                await func()
        elif choice in demos:
            await demos[choice][1]()
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("- Playwright —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: npx playwright install")
        print("- MCP —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ ai_agents/configs/mcp_servers.yaml")
        print("- Claude CLI –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")


if __name__ == "__main__":
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –î–ª—è —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π Playwright: npx playwright install chromium")
    print("2. –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ MCP —Å–µ—Ä–≤–µ—Ä—ã")
    print("3. –í–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ AI —Å–∞–π—Ç–∞—Ö")
    print("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–ª–∏ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã...")
    input()

    asyncio.run(main())
