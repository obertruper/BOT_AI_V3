#!/bin/bash
# -*- coding: utf-8 -*-
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ BOT Trading v3

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_ROOT="/mnt/SSD/PYCHARMPRODJECT/BOT_AI_V3"
LOG_DIR="$PROJECT_ROOT/data/logs"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
print_header() {
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë${NC}          ${GREEN}üìã BOT Trading v3 - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${NC}             ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –ª–æ–≥–∞
show_recent_logs() {
    local log_file=$1
    local title=$2
    local lines=${3:-50}

    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${YELLOW}üìÑ $title (–ø–æ—Å–ª–µ–¥–Ω–∏–µ $lines —Å—Ç—Ä–æ–∫)${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"

    if [ -f "$log_file" ]; then
        tail -n $lines "$log_file"
    else
        echo -e "${RED}–§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $log_file${NC}"
    fi
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    cd "$PROJECT_ROOT" || exit 1

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
    if [ ! -d "$LOG_DIR" ]; then
        echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!${NC}"
        echo -e "${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–æ–≤${NC}"
        exit 1
    fi

    # –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞
    while true; do
        echo -e "${PURPLE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
        echo "1) –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Trading System –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        echo "2) –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ API (—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ)"
        echo "3) –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Frontend"
        echo "4) –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤"
        echo "5) –ü–æ–∏—Å–∫ –≤ –ª–æ–≥–∞—Ö"
        echo "6) –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏"
        echo "7) –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤"
        echo "8) –ü–æ–∫–∞–∑–∞—Ç—å ERROR –∏ WARNING"
        echo "9) –í—ã—Ö–æ–¥"
        read -p "–í–∞—à –≤—ã–±–æ—Ä (1-8): " choice

        case $choice in
            1)
                echo -e "\n${GREEN}üìã –õ–æ–≥–∏ Core System (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏):${NC}\n"
                # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–∞–π–ª –ª–æ–≥–∞
                LATEST_LOG=$(ls -t "$LOG_DIR"/bot_trading_*.log 2>/dev/null | head -1)
                if [ -f "$LATEST_LOG" ]; then
                    tail -f "$LATEST_LOG"
                else
                    echo -e "${RED}–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
                fi
                ;;

            2)
                echo -e "\n${GREEN}üìã –õ–æ–≥–∏ API Backend (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏):${NC}\n"
                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å API –∏ –µ–≥–æ –ª–æ–≥–∏
                if pgrep -f "uvicorn" > /dev/null; then
                    LATEST_LOG=$(ls -t "$LOG_DIR"/bot_trading_*.log 2>/dev/null | head -1)
                    if [ -f "$LATEST_LOG" ]; then
                        tail -f "$LATEST_LOG" | grep -E "(API|uvicorn|FastAPI)"
                    else
                        echo -e "${YELLOW}API –∑–∞–ø—É—â–µ–Ω, –Ω–æ –ª–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
                    fi
                else
                    echo -e "${YELLOW}API –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
                fi
                ;;

            3)
                echo -e "\n${GREEN}üìã –õ–æ–≥–∏ Web Frontend (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏):${NC}\n"
                # Frontend –æ–±—ã—á–Ω–æ –ª–æ–≥–∏—Ä—É–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å npm
                if pgrep -f "vite" > /dev/null; then
                    echo -e "${YELLOW}Frontend –∑–∞–ø—É—â–µ–Ω. –õ–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ npm run dev${NC}"
                else
                    echo -e "${YELLOW}Frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
                fi
                ;;

            4)
                echo -e "\n${BLUE}üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤—Å–µ—Ö –ª–æ–≥–æ–≤:${NC}\n"
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥ —Ñ–∞–π–ª
                LATEST_LOG=$(ls -t "$LOG_DIR"/bot_trading_*.log 2>/dev/null | head -1)
                if [ -f "$LATEST_LOG" ]; then
                    echo -e "${CYAN}–§–∞–π–ª: $(basename "$LATEST_LOG")${NC}"
                    show_recent_logs "$LATEST_LOG" "Trading System" 50
                else
                    echo -e "${RED}–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
                fi
                ;;

            5)
                read -p "–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞: " search_term
                echo -e "\n${BLUE}üîç –ü–æ–∏—Å–∫ '$search_term' –≤ –ª–æ–≥–∞—Ö:${NC}\n"

                # –ò—â–µ–º –≤–æ –≤—Å–µ—Ö –ª–æ–≥–∞—Ö
                for log_file in "$LOG_DIR"/bot_trading_*.log; do
                    if [ -f "$log_file" ]; then
                        echo -e "${YELLOW}$(basename "$log_file"):${NC}"
                        grep --color=always -n "$search_term" "$log_file" 2>/dev/null || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"
                        echo ""
                    fi
                done
                echo ""
                ;;

            6)
                echo -e "\n${YELLOW}‚ö†Ô∏è –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ —É–¥–∞–ª–∏—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é!${NC}"
                read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " confirm
                if [[ "$confirm" =~ ^[Yy]$ ]]; then
                    # –û—á–∏—â–∞–µ–º –≤—Å–µ –ª–æ–≥–∏
                    for log_file in "$LOG_DIR"/bot_trading_*.log; do
                        if [ -f "$log_file" ]; then
                            > "$log_file"
                        fi
                    done
                    echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã${NC}"
                fi
                ;;

            7)
                timestamp=$(date +%Y%m%d_%H%M%S)
                export_dir="$PROJECT_ROOT/logs_export_$timestamp"
                mkdir -p "$export_dir"

                echo -e "\n${BLUE}üì¶ –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤...${NC}"
                cp "$LOG_DIR"/*.log "$export_dir/" 2>/dev/null

                # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
                tar -czf "$export_dir.tar.gz" -C "$PROJECT_ROOT" "logs_export_$timestamp"
                rm -rf "$export_dir"

                echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤: $export_dir.tar.gz${NC}"
                ;;

            8)
                echo -e "\n${RED}üìã –û—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:${NC}\n"
                LATEST_LOG=$(ls -t "$LOG_DIR"/bot_trading_*.log 2>/dev/null | head -1)
                if [ -f "$LATEST_LOG" ]; then
                    echo -e "${YELLOW}–ü–æ—Å–ª–µ–¥–Ω–∏–µ ERROR:${NC}"
                    grep -E "ERROR" "$LATEST_LOG" | tail -20
                    echo -e "\n${YELLOW}–ü–æ—Å–ª–µ–¥–Ω–∏–µ WARNING:${NC}"
                    grep -E "WARNING" "$LATEST_LOG" | tail -20
                else
                    echo -e "${RED}–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
                fi
                ;;

            9)
                echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0
                ;;

            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"
                ;;
        esac

        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        clear
        print_header
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
trap 'echo -e "\n${YELLOW}–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º${NC}"; echo ""; ' INT

# –ó–∞–ø—É—Å–∫
main
