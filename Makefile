# BOT_AI_V3 Makefile
.PHONY: help test test-all test-unit test-ml test-integration test-performance test-coverage test-quick test-watch test-chain clean install dev-install lint format check

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º help
.DEFAULT_GOAL := help

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON := python3
PIP := pip3
PYTEST := pytest
BLACK := black
RUFF := ruff
MYPY := mypy

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏
	@echo "BOT_AI_V3 - –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# ==================== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ====================

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
	$(PIP) install -r requirements.txt

dev-install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	$(PIP) install -e ".[dev]"
	pre-commit install

# ==================== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ====================

test: test-unit ## –ó–∞–ø—É—Å—Ç–∏—Ç—å unit —Ç–µ—Å—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)

test-all: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã
	$(PYTEST) tests/ -v

test-unit: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å unit —Ç–µ—Å—Ç—ã
	$(PYTEST) tests/unit/ -m "unit" -v

test-ml: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å ML —Ç–µ—Å—Ç—ã
	$(PYTEST) tests/unit/ml/ -m "ml" -v --durations=10

test-integration: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
	$(PYTEST) tests/integration/ -m "integration" -v

test-performance: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å performance —Ç–µ—Å—Ç—ã
	$(PYTEST) tests/performance/ -m "performance" -v

test-coverage: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –æ—Ç—á–µ—Ç–æ–º –ø–æ–∫—Ä—ã—Ç–∏—è
	$(PYTEST) tests/ --cov=. --cov-report=html --cov-report=term

test-quick: ## –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã (–±–µ–∑ slow –º–∞—Ä–∫–µ—Ä–∞)
	$(PYTEST) tests/unit/ -m "not slow" -v --tb=short

test-smoke: ## Smoke —Ç–µ—Å—Ç—ã –¥–ª—è CI
	$(PYTEST) tests/ -m "smoke" -v --tb=short

test-failed: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
	$(PYTEST) tests/ --lf -v

test-watch: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ —Ä–µ–∂–∏–º–µ watch (—Ç—Ä–µ–±—É–µ—Ç pytest-watch)
	ptw tests/ -- -x --tb=short

test-chain: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–µ–ø–æ—á–∫—É —Ç–µ—Å—Ç–æ–≤
	@echo "üîó –ó–∞–ø—É—Å–∫ —Ü–µ–ø–æ—á–∫–∏ —Ç–µ—Å—Ç–æ–≤..."
	@$(MAKE) test-unit && \
	$(MAKE) test-ml && \
	$(MAKE) test-integration && \
	echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –≤ —Ü–µ–ø–æ—á–∫–µ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"

test-parallel: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç pytest-xdist)
	$(PYTEST) tests/ -n auto -v

# ==================== ML —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ç–µ—Å—Ç—ã ====================

test-ml-models: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å ML –º–æ–¥–µ–ª–∏
	$(PYTEST) tests/unit/ml/test_patchtst_model.py tests/unit/ml/test_feature_engineering.py -v

test-ml-pipeline: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å ML pipeline
	$(PYTEST) tests/unit/ml/test_ml_manager.py tests/unit/ml/test_ml_signal_processor.py -v

test-ml-integration: ## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç ML
	$(PYTHON) scripts/test_ml_integration.py

# ==================== –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞ ====================

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
	$(RUFF) check .
	$(MYPY) . --ignore-missing-imports

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	$(BLACK) .
	$(RUFF) check --fix .

check: lint test-quick ## –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º

# ==================== –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ====================

db-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ë–î
	$(PYTEST) tests/unit/database/ -v

db-migrate-test: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	alembic upgrade head
	alembic downgrade -1
	alembic upgrade head

# ==================== –û—á–∏—Å—Ç–∫–∞ ====================

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name ".pytest_cache" -exec rm -rf {} +
	find . -type d -name ".coverage" -delete
	find . -type d -name "htmlcov" -exec rm -rf {} +
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	find . -type f -name ".coverage*" -delete

clean-all: clean ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤–∫–ª—é—á–∞—è –ª–æ–≥–∏
	rm -rf data/logs/*
	rm -rf data/cache/*
	rm -rf data/temp/*

# ==================== –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ====================

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–π –¥–≤–∏–∂–æ–∫
	$(PYTHON) main.py

run-web: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
	$(PYTHON) web/launcher.py --reload --debug

run-all: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
	./start_all.sh

# ==================== Docker ====================

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	docker build -t bot-trading-v3:latest .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	docker-compose up -d

docker-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ Docker
	docker-compose run --rm app pytest tests/

# ==================== –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è ====================

docs: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	cd docs && sphinx-build -b html . _build/html

docs-serve: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
	cd docs/_build/html && python -m http.server 8080

# ==================== –£—Ç–∏–ª–∏—Ç—ã ====================

show-todo: ## –ü–æ–∫–∞–∑–∞—Ç—å TODO –≤ –∫–æ–¥–µ
	@grep -r "TODO\|FIXME\|XXX" --include="*.py" . | grep -v ".git"

count-lines: ## –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞
	@find . -name "*.py" -not -path "./venv/*" -not -path "./.git/*" | xargs wc -l | tail -1

deps-tree: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	pipdeptree

security-check: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	safety check
	bandit -r . -f json -o bandit-report.json

# ==================== –†–µ–ª–∏–∑ ====================

version: ## –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
	@cat VERSION

bump-patch: ## –£–≤–µ–ª–∏—á–∏—Ç—å patch –≤–µ—Ä—Å–∏—é
	bumpversion patch

bump-minor: ## –£–≤–µ–ª–∏—á–∏—Ç—å minor –≤–µ—Ä—Å–∏—é
	bumpversion minor

bump-major: ## –£–≤–µ–ª–∏—á–∏—Ç—å major –≤–µ—Ä—Å–∏—é
	bumpversion major
