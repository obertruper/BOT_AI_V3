#!/bin/bash

# BOT_AI_V3 Production Launcher with Real-time Logs
# =================================================

set -e  # Exit on error

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1"
}

warning() {
    echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] WARNING:${NC} $1"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
clear
echo -e "${PURPLE}============================================================${NC}"
echo -e "${PURPLE}üöÄ BOT_AI_V3 - Production Trading System${NC}"
echo -e "${PURPLE}============================================================${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ venv
if [ ! -d "venv" ]; then
    error "Virtual environment –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv
source venv/bin/activate
log "‚úÖ Virtual environment –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
if ! pg_isready -p 5555 -h localhost > /dev/null 2>&1; then
    error "PostgreSQL –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5555!"
    exit 1
fi
log "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
if [ ! -f ".env" ]; then
    error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ production —Ä–µ–∂–∏–º–∞
if ! grep -q "ENVIRONMENT=production" .env; then
    warning "–°–∏—Å—Ç–µ–º–∞ –Ω–µ –≤ production —Ä–µ–∂–∏–º–µ! –ü–µ—Ä–µ–∫–ª—é—á–∞—é..."
    sed -i 's/ENVIRONMENT=.*/ENVIRONMENT=production/' .env
fi
log "‚úÖ Production —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pkill -f "python.*unified_launcher.py" 2>/dev/null || true
pkill -f "python.*main.py" 2>/dev/null || true
pkill -f "python.*launcher.py" 2>/dev/null || true
sleep 2

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p data/logs/production
LOG_DIR="data/logs/production"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤
monitor_logs() {
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º multitail –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if command -v multitail &> /dev/null; then
        log "–ó–∞–ø—É—Å–∫ multitail –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤..."
        multitail \
            -cT ANSI -l "tail -f $LOG_DIR/core_$TIMESTAMP.log | sed 's/^/[CORE] /'" \
            -cT ANSI -l "tail -f $LOG_DIR/api_$TIMESTAMP.log | sed 's/^/[API] /'" \
            -cT ANSI -l "tail -f $LOG_DIR/ml_$TIMESTAMP.log | sed 's/^/[ML] /'" \
            -cT ANSI -l "tail -f data/logs/trading.log | sed 's/^/[TRADE] /'" \
            -cT ANSI -l "tail -f data/logs/error.log | sed 's/^/[ERROR] /'"
    else
        # Fallback –Ω–∞ –æ–±—ã—á–Ω—ã–π tail —Å —Ü–≤–µ—Ç–∞–º–∏
        log "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤..."

        # –°–æ–∑–¥–∞–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
        mkfifo /tmp/bot_logs_pipe 2>/dev/null || true

        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–µ
        (
            tail -f $LOG_DIR/core_$TIMESTAMP.log 2>/dev/null | sed "s/^/$(echo -e ${BLUE})[CORE]$(echo -e ${NC}) /" &
            tail -f $LOG_DIR/api_$TIMESTAMP.log 2>/dev/null | sed "s/^/$(echo -e ${CYAN})[API]$(echo -e ${NC}) /" &
            tail -f $LOG_DIR/ml_$TIMESTAMP.log 2>/dev/null | sed "s/^/$(echo -e ${PURPLE})[ML]$(echo -e ${NC}) /" &
            tail -f data/logs/trading.log 2>/dev/null | sed "s/^/$(echo -e ${GREEN})[TRADE]$(echo -e ${NC}) /" &
            tail -f data/logs/error.log 2>/dev/null | sed "s/^/$(echo -e ${RED})[ERROR]$(echo -e ${NC}) /" &
            wait
        )
    fi
}

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
log "–ó–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã..."
echo ""
echo -e "${YELLOW}–†–µ–∂–∏–º—ã –∑–∞–ø—É—Å–∫–∞:${NC}"
echo "  1) Full - –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (Core + API + Frontend)"
echo "  2) Core - –¢–æ–ª—å–∫–æ —Ç–æ—Ä–≥–æ–≤—ã–π –¥–≤–∏–∂–æ–∫"
echo "  3) ML - –¢–æ—Ä–≥–æ–≤–ª—è + ML –±–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
echo "  4) API - –¢–æ–ª—å–∫–æ API –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
echo ""
read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1-4) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1]: " mode

case $mode in
    2) MODE="core" ;;
    3) MODE="ml" ;;
    4) MODE="api" ;;
    *) MODE="full" ;;
esac

log "–í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: $MODE"
echo ""

# –ó–∞–ø—É—Å–∫ unified_launcher —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤
log "–ó–∞–ø—É—Å–∫ unified_launcher..."
python3 unified_launcher.py --mode=$MODE \
    > >(tee -a $LOG_DIR/unified_$TIMESTAMP.log) \
    2>&1 &

LAUNCHER_PID=$!
log "‚úÖ Unified launcher –∑–∞–ø—É—â–µ–Ω (PID: $LAUNCHER_PID)"

# –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
python3 unified_launcher.py --status

echo ""
echo -e "${GREEN}============================================================${NC}"
echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ production —Ä–µ–∂–∏–º–µ${NC}"
echo -e "${GREEN}============================================================${NC}"
echo ""
echo -e "${YELLOW}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "  ‚Ä¢ –°—Ç–∞—Ç—É—Å: python3 unified_launcher.py --status"
echo "  ‚Ä¢ –õ–æ–≥–∏: python3 unified_launcher.py --logs"
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: pkill -f unified_launcher.py"
echo ""
echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
echo "  ‚Ä¢ Dashboard: http://localhost:5173"
echo "  ‚Ä¢ API: http://localhost:8080"
echo "  ‚Ä¢ API Docs: http://localhost:8080/api/docs"
echo ""
echo -e "${YELLOW}–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:${NC}"
echo "  ‚Ä¢ Trading logs: tail -f data/logs/trading.log"
echo "  ‚Ä¢ Error logs: tail -f data/logs/error.log"
echo "  ‚Ä¢ All logs: tail -f data/logs/production/*_$TIMESTAMP.log"
echo ""
echo -e "${CYAN}–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...${NC}"
echo -e "${CYAN}–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C${NC}"
echo ""

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤
monitor_logs
