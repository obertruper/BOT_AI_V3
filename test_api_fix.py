#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
"""

import subprocess
import sys
import time

import requests


def test_api_startup():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...")

    # –ó–∞–ø—É—Å–∫ API –≤ —Ñ–æ–Ω–µ
    process = subprocess.Popen(
        ["venv/bin/python", "web/launcher.py"],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True,
    )

    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API...")
    time.sleep(5)

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
        response = requests.get("http://localhost:8080/api/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ API —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check")
            health_data = response.json()
            print(f"üìä Status: {health_data.get('status', 'unknown')}")
            success = True
        else:
            print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}")
            success = False

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        success = False

    finally:
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        process.terminate()
        process.wait(timeout=5)
        print("üõë API –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à—ë–Ω")

    return success


def test_unified_launcher():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ unified_launcher"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ unified_launcher –≤ API —Ä–µ–∂–∏–º–µ...")

    # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ unified_launcher
    process = subprocess.Popen(
        ["venv/bin/python", "unified_launcher.py", "--mode=api"],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True,
    )

    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ unified_launcher...")
    time.sleep(10)

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
        response = requests.get("http://localhost:8080/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ unified_launcher —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª API")
            api_data = response.json()
            print(f"üìä API Version: {api_data.get('version', 'unknown')}")
            success = True
        else:
            print(f"‚ùå API —á–µ—Ä–µ–∑ unified_launcher –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}")
            success = False

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API —á–µ—Ä–µ–∑ unified_launcher: {e}")
        success = False

    finally:
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        process.terminate()
        process.wait(timeout=10)
        print("üõë unified_launcher –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à—ë–Ω")

    return success


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 60)
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ BOT_AI_V3")
    print("=" * 60)

    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ API
    direct_success = test_api_startup()
    print()

    # –¢–µ—Å—Ç 2: –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ unified_launcher
    launcher_success = test_unified_launcher()
    print()

    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("=" * 60)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"üìå –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ API: {'‚úÖ –£–°–ü–ï–•' if direct_success else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(
        f"üìå –ß–µ—Ä–µ–∑ unified_launcher: {'‚úÖ –£–°–ü–ï–•' if launcher_success else '‚ùå –û–®–ò–ë–ö–ê'}"
    )

    if direct_success and launcher_success:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û! API –∏—Å–ø—Ä–∞–≤–ª–µ–Ω.")
        return 0
    else:
        print("\n‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞.")
        return 1


if __name__ == "__main__":
    sys.exit(main())
