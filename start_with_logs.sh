#!/bin/bash

echo "=========================================="
echo "üöÄ –ó–ê–ü–£–°–ö BOT_AI_V3 –° –ú–û–ù–ò–¢–û–†–ò–ù–ì–û–ú"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ —É–∂–µ —Å–∏—Å—Ç–µ–º–∞
if pgrep -f "python.*unified_launcher" > /dev/null; then
    echo "‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞!"
    echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ./stop_all.sh –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    exit 1
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ -f "venv/bin/activate" ]; then
    source venv/bin/activate
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
else
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
    echo "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ: python3 -m venv venv"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
if [ ! -f ".env" ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p data/logs

echo ""
echo "üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "   –†–µ–∂–∏–º: core (—Ç–æ—Ä–≥–æ–≤–ª—è)"
echo "   –ü–ª–µ—á–æ: 5x (–∏–∑ config/trading.yaml)"
echo "   –†–∏—Å–∫: 2% –Ω–∞ —Å–¥–µ–ª–∫—É"
echo "   –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å: $500"

echo ""
echo "üîß –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
echo "   ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
python3 -c "
import asyncio
from database.connections.postgres import AsyncPGPool

async def check_data():
    result = await AsyncPGPool.fetch(
        '''SELECT COUNT(*) as cnt FROM raw_market_data
           WHERE timestamp > EXTRACT(EPOCH FROM NOW() - INTERVAL '1 hour') * 1000'''
    )
    return result[0]['cnt'] > 0

has_data = asyncio.run(check_data())
exit(0 if has_data else 1)
" 2>/dev/null

if [ $? -ne 0 ]; then
    echo "   ‚ö†Ô∏è  –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏, –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ..."
    python3 scripts/load_historical_data_quick.py > data/logs/data_load.log 2>&1
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
    else
        echo "   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–∏—Ö"
    fi
else
    echo "   ‚úÖ –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—Ä–≥–æ–≤–æ–µ —è–¥—Ä–æ
echo "   ‚Üí –ó–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —è–¥—Ä–∞ —Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö..."
nohup python unified_launcher.py --mode=core > data/logs/launcher.log 2>&1 &
LAUNCHER_PID=$!
echo "   ‚úÖ –¢–æ—Ä–≥–æ–≤–æ–µ —è–¥—Ä–æ –∑–∞–ø—É—â–µ–Ω–æ (PID: $LAUNCHER_PID)"

# –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —è–¥—Ä–∞
sleep 5

# –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
echo "   ‚Üí –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞..."
nohup python unified_launcher.py --mode=api > data/logs/api.log 2>&1 &
API_PID=$!
echo "   ‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $API_PID, http://localhost:8080)"

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
echo "   ‚Üí –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
cd web/frontend
nohup npm run dev > ../../data/logs/frontend.log 2>&1 &
FRONTEND_PID=$!
cd ../..
echo "   ‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID, http://localhost:5173)"

echo ""
echo "‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã:"
echo "   ‚Ä¢ –¢–æ—Ä–≥–æ–≤–æ–µ —è–¥—Ä–æ: PID $LAUNCHER_PID"
echo "   ‚Ä¢ API —Å–µ—Ä–≤–µ—Ä: http://localhost:8080 (PID $API_PID)"
echo "   ‚Ä¢ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5173 (PID $FRONTEND_PID)"
echo "   ‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8080/api/docs"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç
sleep 2
if ps -p $LAUNCHER_PID > /dev/null && ps -p $API_PID > /dev/null; then
    echo "‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–∫—Ç–∏–≤–Ω—ã"
else
    echo "‚ùå –û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π!"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "  ‚Ä¢ tail -f data/logs/launcher.log"
    echo "  ‚Ä¢ tail -f data/logs/api.log"
    echo "  ‚Ä¢ tail -f data/logs/frontend.log"
    exit 1
fi

echo ""
echo "=========================================="
echo "üìã –ú–û–ù–ò–¢–û–†–ò–ù–ì –õ–û–ì–û–í"
echo "=========================================="
echo ""
echo "–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å)"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
tail -f data/logs/bot_trading_*.log | grep --line-buffered -E "signal|order|position|SL|TP|leverage|ERROR|WARNING"
