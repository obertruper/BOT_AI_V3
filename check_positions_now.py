#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π
"""

import asyncio
import os
import sys

from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PATH
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

load_dotenv()


async def check_positions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π"""
    from exchanges.bybit.client import BybitClient

    api_key = os.getenv("BYBIT_API_KEY")
    api_secret = os.getenv("BYBIT_API_SECRET")

    client = BybitClient(api_key=api_key, api_secret=api_secret)

    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏
        positions = await client.get_positions()

        if positions:
            print(f"\nüìä –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏ ({len(positions)}):")
            print("=" * 80)

            total_pnl = 0
            for pos in positions:
                # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
                print(f"\n{pos.symbol}:")
                print(f"  –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {pos.side}")
                print(f"  –†–∞–∑–º–µ—Ä: {pos.size}")
                print(f"  –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {pos.entry_price}")
                print(f"  –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {pos.mark_price}")

                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º P&L –≤—Ä—É—á–Ω—É—é
                if pos.side == "Buy":
                    pnl = (pos.mark_price - pos.entry_price) * pos.size
                else:  # Sell
                    pnl = (pos.entry_price - pos.mark_price) * pos.size

                print(f"  P&L: ${pnl:.2f}")
                total_pnl += pnl

            print("\n" + "=" * 80)
            print(f"üí∞ –û–±—â–∏–π P&L: ${total_pnl:.2f}")
        else:
            print("üìä –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
        balance = await client.get_balance("USDT")
        print("\nüíµ –ë–∞–ª–∞–Ω—Å USDT:")
        print(f"  –í—Å–µ–≥–æ: {balance.total:.2f}")
        print(f"  –î–æ—Å—Ç—É–ø–Ω–æ: {balance.available:.2f}")
        print(f"  –í –ø–æ–∑–∏—Ü–∏—è—Ö: {balance.total - balance.available:.2f}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(check_positions())
