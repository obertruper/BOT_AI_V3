#!/usr/bin/env python3
"""
ТОЧНАЯ конфигурация 240 признаков для модели UnifiedPatchTST.
Модель обучена в /mnt/SSD/PYCHARMPRODJECT/LLM TRANSFORM/crypto_ai_trading/
Проверено через checkpoint: patch_embedding.weight имеет размерность [256, 240, 16]
"""

# Базовый набор признаков - ТОЧНО 240 штук
REQUIRED_FEATURES_240 = [
    # Price-based features (10)
    "returns",
    "high_low_ratio",
    "close_open_ratio",
    "close_position",
    "volume_ratio",
    "turnover_ratio",
    "vwap",
    "close_vwap_ratio",
    "vwap_extreme_deviation",
    "price_efficiency",
    # Technical indicators - Oscillators (10)
    "rsi",
    "rsi_ma",
    "rsi_std",
    "stoch_k",
    "stoch_d",
    "stoch_k_ma",
    "stoch_d_ma",
    "williams_r",
    "williams_r_ma",
    "williams_r_std",
    # MACD features (10)
    "macd",
    "macd_signal",
    "macd_diff",
    "macd_diff_ma",
    "macd_diff_std",
    "macd_cross",
    "macd_divergence",
    "macd_momentum",
    "macd_acceleration",
    "macd_trend_strength",
    # Bollinger Bands (10)
    "bb_upper",
    "bb_middle",
    "bb_lower",
    "bb_width",
    "bb_position",
    "bb_squeeze",
    "bb_expansion",
    "bb_trend",
    "bb_breakout",
    "bb_reversal",
    # Moving averages (20)
    "sma_10",
    "sma_20",
    "sma_50",
    "sma_100",
    "sma_200",
    "ema_10",
    "ema_20",
    "ema_50",
    "ema_100",
    "ema_200",
    "sma_10_slope",
    "sma_20_slope",
    "sma_50_slope",
    "ema_10_slope",
    "ema_20_slope",
    "ema_50_slope",
    "ma_cross_10_20",
    "ma_cross_20_50",
    "ma_cross_50_200",
    "ma_ribbon_strength",
    # Volume features (15)
    "volume_sma_10",
    "volume_sma_20",
    "volume_sma_50",
    "volume_ema_10",
    "volume_ema_20",
    "obv",
    "obv_ma",
    "obv_slope",
    "obv_divergence",
    "cmf",
    "cmf_ma",
    "cmf_std",
    "mfi",
    "mfi_ma",
    "mfi_divergence",
    # Volatility features (15)
    "atr",
    "atr_ma",
    "atr_pct",
    "atr_expansion",
    "volatility_15m",
    "volatility_1h",
    "volatility_4h",
    "volatility_1d",
    "volatility_ratio_15m_1h",
    "volatility_ratio_1h_4h",
    "volatility_ratio_4h_1d",
    "parkinson_volatility",
    "garman_klass_volatility",
    "rogers_satchell_volatility",
    "yang_zhang_volatility",
    # Trend features (15)
    "adx",
    "adx_ma",
    "plus_di",
    "minus_di",
    "adx_trend_strength",
    "aroon_up",
    "aroon_down",
    "aroon_oscillator",
    "cci",
    "cci_ma",
    "cci_signal",
    "trend_strength",
    "trend_consistency",
    "trend_duration",
    "trend_momentum",
    # Support/Resistance (10)
    "pivot_point",
    "resistance_1",
    "resistance_2",
    "support_1",
    "support_2",
    "distance_to_resistance",
    "distance_to_support",
    "support_strength",
    "resistance_strength",
    "sr_flip_signal",
    # Momentum features (15)
    "momentum_15m",
    "momentum_1h",
    "momentum_4h",
    "momentum_1d",
    "momentum_acceleration_15m",
    "momentum_acceleration_1h",
    "roc_15m",
    "roc_1h",
    "roc_4h",
    "roc_1d",
    "velocity_15m",
    "velocity_1h",
    "momentum_divergence",
    "momentum_quality",
    "momentum_consistency",
    # Pattern features (10)
    "higher_high",
    "lower_low",
    "higher_low",
    "lower_high",
    "bullish_engulfing",
    "bearish_engulfing",
    "hammer",
    "shooting_star",
    "doji",
    "spinning_top",
    # Market structure (15)
    "spread",
    "spread_ma",
    "spread_std",
    "tick_direction",
    "tick_momentum",
    "trade_intensity",
    "trade_flow_imbalance",
    "buy_pressure",
    "sell_pressure",
    "order_flow_ratio",
    "market_depth_imbalance",
    "bid_ask_volume_ratio",
    "large_trade_ratio",
    "smart_money_flow",
    "accumulation_distribution",
    # Correlation features (10)
    "btc_correlation",
    "btc_beta",
    "market_correlation",
    "sector_correlation",
    "volume_price_correlation",
    "correlation_stability",
    "correlation_momentum",
    "decorrelation_signal",
    "correlation_regime",
    "correlation_strength",
    # Time features (10)
    "hour_sin",
    "hour_cos",
    "day_sin",
    "day_cos",
    "week_sin",
    "week_cos",
    "month_sin",
    "month_cos",
    "is_asian_session",
    "is_european_session",
    # Risk metrics (10)
    "sharpe_ratio_15m",
    "sharpe_ratio_1h",
    "sharpe_ratio_4h",
    "sortino_ratio_1h",
    "calmar_ratio_1h",
    "max_drawdown_1h",
    "max_drawdown_4h",
    "var_95",
    "cvar_95",
    "risk_reward_ratio",
    # Microstructure (15)
    "kyle_lambda",
    "amihud_illiquidity",
    "roll_spread",
    "effective_spread",
    "realized_spread",
    "price_impact",
    "temporary_impact",
    "permanent_impact",
    "adverse_selection",
    "order_imbalance",
    "trade_size_clustering",
    "quote_stuffing_indicator",
    "market_toxicity",
    "information_share",
    "price_discovery",
    # Advanced features (15)
    "hurst_exponent",
    "fractal_dimension",
    "entropy",
    "mutual_information",
    "transfer_entropy",
    "granger_causality_index",
    "cointegration_score",
    "regime_probability",
    "jump_intensity",
    "microstructure_noise",
    "price_efficiency_ratio",
    "market_impact_score",
    "execution_shortfall",
    "alpha_decay",
    "signal_decay",
    # ML-derived features (10)
    "pca_1",
    "pca_2",
    "pca_3",
    "pca_4",
    "pca_5",
    "autoencoder_1",
    "autoencoder_2",
    "autoencoder_3",
    "clustering_feature",
    "anomaly_score",
    # Composite signals (10)
    "composite_momentum",
    "composite_trend",
    "composite_volatility",
    "composite_volume",
    "composite_pattern",
    "signal_strength",
    "signal_consistency",
    "signal_quality",
    "regime_signal",
    "meta_signal",
]

# Проверка что ровно 240
assert (
    len(REQUIRED_FEATURES_240) == 240
), f"Должно быть 240 признаков, а не {len(REQUIRED_FEATURES_240)}"


def get_required_features() -> list[str]:
    """Возвращает список из 240 признаков"""
    return REQUIRED_FEATURES_240.copy()


def get_feature_count() -> int:
    """Возвращает количество признаков (240)"""
    return 240
